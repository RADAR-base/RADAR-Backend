---
version: '2.3'

networks:
  kafka:
    driver: bridge

services:
  #---------------------------------------------------------------------------#
  # Zookeeper Cluster                                                         #
  #---------------------------------------------------------------------------#
  zookeeper-1:
    image: confluentinc/cp-zookeeper:5.5.1
    networks:
      - kafka
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 1000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVERS: zookeeper-1:2888:3888

  #---------------------------------------------------------------------------#
  # Kafka Cluster                                                             #
  #---------------------------------------------------------------------------#
  kafka-1:
    image: confluentinc/cp-kafka:5.5.1
    depends_on:
      - zookeeper-1
    networks:
      - kafka
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-1:9092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_GROUP_MIN_SESSION_TIMEOUT_MS: 5000
      KAFKA_INTER_BROKER_PROTOCOL_VERSION: "2.5"
      KAFKA_LOG_MESSAGE_FORMAT_VERSION: "2.5"
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0

  kafka-2:
    image: confluentinc/cp-kafka:5.5.1
    depends_on:
      - zookeeper-1
    networks:
      - kafka
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-2:9092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_GROUP_MIN_SESSION_TIMEOUT_MS: 5000
      KAFKA_INTER_BROKER_PROTOCOL_VERSION: "2.5"
      KAFKA_LOG_MESSAGE_FORMAT_VERSION: "2.5"
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0

  kafka-3:
    image: confluentinc/cp-kafka:5.5.1
    depends_on:
      - zookeeper-1
    networks:
      - kafka
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-3:9092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_GROUP_MIN_SESSION_TIMEOUT_MS: 5000
      KAFKA_INTER_BROKER_PROTOCOL_VERSION: "2.5"
      KAFKA_LOG_MESSAGE_FORMAT_VERSION: "2.5"
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0

  #---------------------------------------------------------------------------#
  # Schema Registry                                                           #
  #---------------------------------------------------------------------------#
  schema-registry-1:
    image: confluentinc/cp-schema-registry:5.5.1
    depends_on:
      - zookeeper-1
      - kafka-1
      - kafka-2
      - kafka-3
    networks:
      - kafka
    restart: always
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka-1:9092,PLAINTEXT://kafka-2:9092,PLAINTEXT://kafka-3:9092
      SCHEMA_REGISTRY_HOST_NAME: schema-registry-1
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
      KAFKA_GROUP_MIN_SESSION_TIMEOUT_MS: 5000

  #---------------------------------------------------------------------------#
  # REST proxy                                                                #
  #---------------------------------------------------------------------------#
  rest-proxy-1:
    image: confluentinc/cp-kafka-rest:5.5.1
    depends_on:
      - kafka-1
      - kafka-2
      - kafka-3
      - schema-registry-1
    networks:
      - kafka
    ports:
      - "8082:8082"
    environment:
      KAFKA_REST_BOOTSTRAP_SERVERS: PLAINTEXT://kafka-1:9092,PLAINTEXT://kafka-2:9092,PLAINTEXT://kafka-3:9092
      KAFKA_REST_LISTENERS: http://rest-proxy-1:8082
      KAFKA_REST_SCHEMA_REGISTRY_URL: http://schema-registry-1:8081
      KAFKA_REST_HOST_NAME: rest-proxy-1
      KAFKA_GROUP_MIN_SESSION_TIMEOUT_MS: 5000

#  #---------------------------------------------------------------------------#
#  # Integration test                                                          #
#  #---------------------------------------------------------------------------#
#  integration-test:
#    build:
#      context: ../../..
#      dockerfile: src/integrationTest/docker/Dockerfile
#    # Right now, only direct connections to kafka are tested
#    depends_on:
#      - kafka-1
#      - schema-registry-1
#    networks:
#      - kafka
#      - default
#    command:
#      - gradle
#      - integrationTest
#    volumes:
#      - ../../../build/jacoco:/code/build/jacoco
#      - ../../../build/reports:/code/build/reports

  #---------------------------------------------------------------------------#
  # RADAR APPSERVER                                                           #
  #---------------------------------------------------------------------------#
  appserver:
    image: radarbase/radar-appserver:1.3.0
    restart: always
    ports:
      - 8080:8080
    volumes:
      - ./etc/radar_is.yml:/resources/radar_is.yml
      - ./logs/:/var/log/radar/appserver/
      - ./etc/google-credentials.json:/resources/google-credentials.json
    depends_on:
      - radarbase-postgresql
      - managementportal-app
    networks:
      - kafka
    environment:
      JDK_JAVA_OPTIONS: -Xmx4G -Djava.security.egd=file:/dev/./urandom
      SPRING_DATASOURCE_URL: jdbc:postgresql://radarbase-postgresql:5432/appserver
      SPRING_DATASOURCE_USERNAME: radarcns
      SPRING_DATASOURCE_PASSWORD: radarcns
      SECURITY_RADAR_MANAGEMENTPORTAL_URL: http://localhost:8090/managementportal
      GOOGLE_APPLICATION_CREDENTIALS: /resources/google-credentials.json
      RADAR_ADMIN_USER: radar
      RADAR_ADMIN_PASSWORD: appserver
      SPRING_APPLICATION_JSON: '{"spring":{"boot":{"admin":{"client":{"url":"http://spring-boot-admin:1111","username":"radar","password":"appserver"}}}}}'
      RADAR_IS_CONFIG_LOCATION: "/resources/radar_is.yml"
      SPRING_BOOT_ADMIN_CLIENT_INSTANCE_NAME: radar-appserver
    healthcheck:
      # should give an unauthenticated response, rather than a 404
      test: ["CMD-SHELL", "wget --spider localhost:8080/projects 2>&1 | grep -q 401 || exit 1"]
      interval: 1m30s
      timeout: 5s
      retries: 3

  spring-boot-admin:
    image: slydeveloper/spring-boot-admin:latest
    restart: always
    ports:
      - 8888:1111
    networks:
      - kafka
    environment:
      SPRING_BOOT_ADMIN_USER_NAME: radar
      SPRING_BOOT_ADMIN_USER_PASSWORD: appserver
      SPRING_BOOT_ADMIN_TITLE: RADAR-appserver
      SPRING_APPLICATION_JSON: '{"spring":{"boot":{"admin":{"username":"radar","password":"appserver","title":"RADAR-appserver"}}}}'
  #---------------------------------------------------------------------------#
  # Management Portal                                                         #
  #---------------------------------------------------------------------------#
  managementportal-app:
    image: radarbase/management-portal:0.8.0
    depends_on:
      - radarbase-postgresql
    ports:
      - 8090:8080
    networks:
      - kafka
    environment:
      SPRING_PROFILES_ACTIVE: prod
      SPRING_DATASOURCE_URL: jdbc:postgresql://radarbase-postgresql:5432/managementportal
      SPRING_DATASOURCE_USERNAME: radarcns
      SPRING_DATASOURCE_PASSWORD: radarcns
      MANAGEMENTPORTAL_FRONTEND_CLIENT_SECRET: "testMe"
      MANAGEMENTPORTAL_COMMON_BASE_URL: http://localhost:8080/managementportal
      MANAGEMENTPORTAL_COMMON_MANAGEMENT_PORTAL_BASE_URL: http://localhost:8080/managementportal
      MANAGEMENTPORTAL_OAUTH_CLIENTS_FILE: /mp-includes/config/oauth_client_details.csv
      MANAGEMENTPORTAL_CATALOGUE_SERVER_ENABLE_AUTO_IMPORT: 'false'
      MANAGEMENTPORTAL_OAUTH_SIGNING_KEY_ALIAS: 'radarbase-managementportal-ec'
      JAVA_OPTS: -Xmx256m  # maximum heap size for the JVM running ManagementPortal, increase this as necessary
    volumes:
      - ./etc/mp-config/:/mp-includes/config

  radarbase-postgresql:
    image: radarbase/radarbase-postgres:latest
    ports:
      - "5434:5432"
    networks:
      - kafka
    environment:
      - POSTGRES_USER=radarcns
      - POSTGRES_PASSWORD=radarcns
      - POSTGRES_MULTIPLE_DATABASES=managementportal,appserver


  realtime-consumer:
    image: radarbase/realtime-consumer:latest
    build: ../../../
    networks:
      - kafka
    volumes:
      - "../../../radar.yml:/etc/radar.yml"
    command:
      - "realtime_consumers"
      - "-c /etc/radar.yml"
    environment:
      KAFKA_SCHEMA_REGISTRY: http://schema-registry-1:8081
