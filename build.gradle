plugins {
    // Apply the java plugin to add support for Java
    id 'java'
    id 'application'
    id 'org.jetbrains.kotlin.jvm' version '1.6.10'
}

//---------------------------------------------------------------------------//
// Configuration                                                             //
//---------------------------------------------------------------------------//

group = 'org.radarcns'
version = '0.4.1-SNAPSHOT'

mainClassName = 'org.radarcns.RadarBackend'
applicationDefaultJvmArgs = ["-Dlog4j.configuration=log4j.properties"]

ext {
    moduleDescription = 'Kafka backend for processing device data.'
    githubRepoName = 'RADAR-Base/RADAR-Backend'


    githubUrl = 'https://github.com/' + githubRepoName + '.git'
    issueUrl = 'https://github.com/' + githubRepoName + '/issues'
    website = 'https://radar-base.org'

    confluentVersion = '7.0.1'
    hamcrestVersion = '2.2'
    kafkaVersion = '3.0.0'
    jacksonVersion = '2.13.1'
    javaMailVersion = '1.6.2'
    junitVersion = '4.13.1'
    findbugVersion = '3.0.2'
    commonsCliVersion = '1.4'
    mockitoVersion = '4.3.1'
    radarCommonsVersion = '0.14.1-SNAPSHOT'
    radarSchemasVersion = '0.7.6'
    subethamailVersion = '3.1.7'
    jsoupVersion = '1.14.3'
    slf4jVersion = '1.7.35'
    reload4jVersion = '1.2.18.5'
    avroVersion = '1.11.0'
    jsonPathVersion = '2.7.0'
}

//---------------------------------------------------------------------------//
// Sources and classpath configurations                                        //
//---------------------------------------------------------------------------//

// In this section you declare where to find the dependencies of your project
repositories {
    mavenCentral()
    // Kafka/confluent releases
    maven { url 'https://packages.confluent.io/maven/' }
    maven { url = "https://oss.sonatype.org/content/repositories/snapshots" }
    maven { url 'https://jitpack.io' }
}

configurations.all {
    resolutionStrategy.cacheDynamicVersionsFor 0, 'hours'
    resolutionStrategy.cacheChangingModulesFor 0, 'hours'
}

// In this section you declare the dependencies for your production and test code
dependencies {
    implementation group: 'org.radarbase', name: 'radar-commons', version: radarCommonsVersion
    implementation group: 'org.apache.avro', name: 'avro', version: avroVersion
    implementation group: 'org.radarbase', name: 'radar-commons-testing', version: radarCommonsVersion
    implementation group: 'org.radarbase', name: 'radar-schemas-commons', version: radarSchemasVersion
    implementation group: 'org.radarbase', name: 'oauth-client-util', version: '0.8.1'
    implementation group: 'org.radarbase', name: 'radar-app-config-client', version: '0.4.1-SNAPSHOT'

    // Kafka streaming API
    implementation group: 'org.apache.kafka', name: 'kafka-streams', version: kafkaVersion
    implementation group: 'io.confluent', name: 'kafka-streams-avro-serde', version: confluentVersion
    implementation group: 'io.confluent', name: 'kafka-json-serializer', version: confluentVersion

    // Nonnull annotation
    implementation group: 'com.google.code.findbugs' , name: 'jsr305' , version: findbugVersion

    // Command-line interface
    implementation group: 'commons-cli', name: 'commons-cli', version: commonsCliVersion

    // Configuration @JsonProperty
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: jacksonVersion
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: jacksonVersion
    implementation group: 'com.fasterxml.jackson.module', name: 'jackson-module-kotlin', version: jacksonVersion

    // Monitor mail sending
    implementation group: 'javax.mail', name: 'javax.mail-api', version: javaMailVersion
    implementation group: 'com.sun.mail', name: 'javax.mail', version: javaMailVersion

    // JSoup html parser
    implementation group: 'org.jsoup', name: 'jsoup', version: jsoupVersion

    // JsonPath for evaluating json conditions dynamically.
    implementation group: 'com.jayway.jsonpath', name: 'json-path', version: jsonPathVersion

    runtimeOnly group: 'ch.qos.reload4j', name: 'reload4j', version: reload4jVersion
    runtimeOnly group: 'org.slf4j', name: 'slf4j-reload4j', version: slf4jVersion
}

if (!hasProperty('profile')) {
    ext.profile = 'dev'
}

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(17))
    }
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile) {
    kotlinOptions {
        jvmTarget = "17"
        freeCompilerArgs = [
                "-Xjavac-arguments='-Xlint:unchecked -Xlint:deprecation'"
        ]
    }
}

tasks.withType(JavaCompile) {
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
}

apply from: "gradle/profile.${profile}.gradle"
